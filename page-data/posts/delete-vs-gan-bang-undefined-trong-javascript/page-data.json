{"componentChunkName":"component---src-templates-post-template-tsx","path":"/posts/delete-vs-gan-bang-undefined-trong-javascript/","result":{"data":{"markdownRemark":{"id":"9a610e7c-410b-59be-8284-068d548cce5b","html":"<p>Hôm nay đang code thì mình gặp trường hợp phải xoá một property trong object. Thoạt nhìn tưởng đơn giản mà lại chứa đựng những kiến thức không ngờ. 😱</p>\n<p>Như các bạn đã biết, có 2 cách để “xoá” một property khỏi object trong JavaScript:</p>\n<ol>\n<li>\n<p>Dùng <code class=\"language-text\">delete</code> operator</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">delete</span> foo<span class=\"token punctuation\">.</span>bar</code></pre></div>\n</li>\n<li>\n<p>Gán property cần xoá bằng <code class=\"language-text\">undefined</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">foo<span class=\"token punctuation\">.</span>bar <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span></code></pre></div>\n</li>\n</ol>\n<p>Sau một hồi Google thần chưởng, mình có thể tóm tắt lại những điểm khác biệt giữa 2 cách trên.</p>\n<h2 id=\"1-gán-property-bằng-undefined-không-hoàn-toàn-xoá-property-đó\" style=\"position:relative;\"><a href=\"#1-g%C3%A1n-property-b%E1%BA%B1ng-undefined-kh%C3%B4ng-ho%C3%A0n-to%C3%A0n-xo%C3%A1-property-%C4%91%C3%B3\" aria-label=\"1 gán property bằng undefined không hoàn toàn xoá property đó permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Gán property bằng <code class=\"language-text\">undefined</code> không hoàn toàn xoá property đó</h2>\n<p>Điều đầu tiên bạn nên biết là việc gán <code class=\"language-text\">foo.bar</code> bằng <code class=\"language-text\">undefined</code> chỉ đơn giản là cho property đó có giá trị là <code class=\"language-text\">undefined</code>. Có nghĩa là khi bạn sử dụng hàm <code class=\"language-text\">hasOwnProperty()</code> hoặc lặp object trong vòng lặp <code class=\"language-text\">for in</code> thì property vẫn còn tồn tại.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">foo<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// returns true</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> key <span class=\"token keyword\">in</span> foo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'I am still alive'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// log `I am still a live`</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nếu dùng <code class=\"language-text\">delete</code> operator thì property sẽ bị xoá hoàn toàn, và kết quả trong đoạn code trên sẽ bị đảo ngược.</p>\n<p>Lí do là vì <code class=\"language-text\">delete</code> operator làm thay đổi <a href=\"https://thefullsnack.com/posts/javascript-v8-notes.html#hidden-class\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hidden class</a>, tương đương với việc property <code class=\"language-text\">bar</code> chưa bao giờ được khai báo. Điều này không xảy ra khi gán <code class=\"language-text\">foo.bar</code> bằng <code class=\"language-text\">undefined</code>, vì thao tác này chỉ gán lại giá trị của property <code class=\"language-text\">bar</code>. Vì vậy nếu bạn muốn check trong object có tồn tại property nào đó không thì nên sử dụng hàm <code class=\"language-text\">hasOwnProperty()</code> hơn là một câu check đơn giản:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">.</span>bar <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Các bạn thử tìm hiểu sự khác biệt giữa <em>undefined</em> và <em>not defined</em> trong JavaScript nữa nhé, khá thú vị đấy! 😉</p>\n<h2 id=\"2-nếu-object-có-prototype-chain-thì-sao\" style=\"position:relative;\"><a href=\"#2-n%E1%BA%BFu-object-c%C3%B3-prototype-chain-th%C3%AC-sao\" aria-label=\"2 nếu object có prototype chain thì sao permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Nếu object có prototype chain thì sao?</h2>\n<p>Mình có một ví dụ như sau:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> origin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> extended <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>origin<span class=\"token punctuation\">)</span>\nextended<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n<span class=\"token keyword\">delete</span> extended<span class=\"token punctuation\">.</span>x\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>extended<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ???</span></code></pre></div>\n<p>Các bạn thử đoán xem đoạn code trên sẽ log ra cái gì?</p>\n<p>Nếu bạn nghĩ kết quả là <code class=\"language-text\">undefined</code> thì xin chia buồn, hôm nay bạn tạch lô =))</p>\n<p>Ở đây chúng ta có object <code class=\"language-text\">extended</code> có prototype là object <code class=\"language-text\">origin</code>. Sau khi gọi <code class=\"language-text\">delete</code> thì mỗi lần truy cập lại <code class=\"language-text\">extended.x</code> JavaScript engine sẽ look up từ prototype chain của <code class=\"language-text\">extended</code> và tìm thấy property <code class=\"language-text\">x</code> của <code class=\"language-text\">origin</code>. Kết quả trả về console là <code class=\"language-text\">1</code>.</p>\n<p>OK đã rõ, vậy điều gì sẽ xảy ra khi thay 2 dòng cuối của đoạn code trên thành như sau:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">extended<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>extended<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ???</span></code></pre></div>\n<p>Lúc này kết quả log ra sẽ là <code class=\"language-text\">undefined</code>. Vì property <code class=\"language-text\">x</code> vẫn tồn tại trong <code class=\"language-text\">extended</code> với giá trị bằng <code class=\"language-text\">undefined</code> nên sẽ không xảy ra việc look up từ prototype chain.</p>\n<p>Túm lại là khi bạn thực hiện “xoá” một property khỏi object, nếu không chắc chắn rằng object đó có prototype chain hay không và các object nó thừa hưởng prototype có chứa property cần xoá không, thì bạn nên gán nó bằng <code class=\"language-text\">undefined</code> thay vì dùng <code class=\"language-text\">delete</code> operator.</p>\n<h2 id=\"3-tôi-có-một-con-máy-linux-với-cpu-08ghz-và-256mb-ram-tôi-quan-tâm-tới-performance\" style=\"position:relative;\"><a href=\"#3-t%C3%B4i-c%C3%B3-m%E1%BB%99t-con-m%C3%A1y-linux-v%E1%BB%9Bi-cpu-08ghz-v%C3%A0-256mb-ram-t%C3%B4i-quan-t%C3%A2m-t%E1%BB%9Bi-performance\" aria-label=\"3 tôi có một con máy linux với cpu 08ghz và 256mb ram tôi quan tâm tới performance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. “Tôi có một con máy Linux với CPU 0.8GHz và 256MB RAM, tôi quan tâm tới performance!”</h2>\n<p>Như đã đề cập ở phần 1, việc <code class=\"language-text\">delete</code> một property sẽ làm thay đổi hidden class, đồng nghĩa với performance bị ảnh hưởng. Bạn nên tránh sử dụng <code class=\"language-text\">delete</code> operator quá nhiều, đặc biệt ở trong vòng lặp. Tuy nhiên không có nghĩa là bạn không bao giờ nên dùng operator này. Việc optimize code ở mức JavaScript engine sẽ không đáng để đánh đổi nếu nó làm cho code của bạn đọc như văn tế.</p>\n<p>Bài viết này đã giúp bạn hiểu được sự khác biệt giữa 2 cách xóa property khỏi object trong JavaScript. Hi vọng nó sẽ giúp bạn lên level để đi cà khịa với đồng nghiệp. 😎</p>\n<p><em>Tham khảo từ:</em></p>\n<ul>\n<li><em><a href=\"https://stackoverflow.com/a/14967568/8943850\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">javascript - delete a.x vs a.x = undefined - Stack Overflow</a></em></li>\n<li><em><a href=\"https://thefullsnack.com/posts/javascript-v8-notes.html#hidden-class\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vài ghi chép về V8 và Garbage Collection | Huy’s Blog</a></em></li>\n</ul>","fields":{"slug":"/posts/delete-vs-gan-bang-undefined-trong-javascript/","categorySlug":"/category/knowledge/","tagSlugs":["/tag/javascript/"]},"frontmatter":{"date":"2019-11-27T04:30:00.000Z","description":"Đã bao giờ bạn xóa một property khỏi object trong JavaScript chưa? Bạn sử dụng cách nào? Bạn có muốn biết sự khác biệt giữa những cách đó? Bài viết này sẽ giúp bạn giải thích những thắc mắc trên.","tags":["javascript"],"title":"delete vs gán bằng undefined trong JavaScript","category":"Knowledge","socialImage":{"publicURL":"/static/9cf94f82a1f5b4e3063d2ba8bfe2cd5b/thumb.png"}}}},"pageContext":{"slug":"/posts/delete-vs-gan-bang-undefined-trong-javascript/"}},"staticQueryHashes":["251939775","401334301","994130391"]}