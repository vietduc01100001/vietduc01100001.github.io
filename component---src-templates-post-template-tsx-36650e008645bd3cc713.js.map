{"version":3,"sources":["webpack:///./src/components/Post/Content/Content.module.scss","webpack:///./src/components/Post/Tags/Tags.module.scss","webpack:///./src/components/Post/Author/Author.module.scss","webpack:///./src/components/Post/Post.module.scss","webpack:///./src/components/Post/Meta/Meta.module.scss","webpack:///./src/components/Post/Author/Author.tsx","webpack:///./src/components/Post/Comments/Comments.tsx","webpack:///./src/components/Post/Content/Content.tsx","webpack:///./src/components/Post/Meta/Meta.tsx","webpack:///./src/components/Post/Tags/Tags.tsx","webpack:///./src/components/Post/Post.tsx","webpack:///./src/templates/post-template.tsx"],"names":["module","exports","Author","author","useSiteMetadata","className","styles","to","src","withPrefix","photo","width","height","alt","name","Contacts","marginBottom","contacts","Comments","Content","body","title","dangerouslySetInnerHTML","__html","dateFormat","year","month","day","Meta","category","categorySlug","date","getReadableDate","Tags","tags","tagSlugs","map","slug","i","key","Post","post","html","fields","frontmatter","postSlug","postTitle","PostTemplate","data","siteTitle","siteSubtitle","subtitle","markdownRemark","description","postDescription","socialImage","metaDescription","socialImageUrl","publicURL","Layout"],"mappings":"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","file":"component---src-templates-post-template-tsx-36650e008645bd3cc713.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content-module--content--3p512\",\"content__title\":\"Content-module--content__title--2BDW9\",\"content__body\":\"Content-module--content__body--2TrQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags-module--tags--1L_ct\",\"tags__list\":\"Tags-module--tags__list--91FqN\",\"tags__list-item\":\"Tags-module--tags__list-item--1M30P\",\"tags__list-item-link\":\"Tags-module--tags__list-item-link--3SL_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"Author-module--author--2Yefr\",\"author__card\":\"Author-module--author__card--2FUpD\",\"author__card-profile\":\"Author-module--author__card-profile--3WV8O\",\"author__card-profile-photo\":\"Author-module--author__card-profile-photo--3zTzs\",\"author__card-profile-name\":\"Author-module--author__card-profile-name--2gNOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post__footer\":\"Post-module--post__footer--3WzWU\",\"post__comments\":\"Post-module--post__comments--25y6I\",\"post__home-button\":\"Post-module--post__home-button--16Kl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"Meta-module--meta--1XDVh\",\"meta__divider\":\"Meta-module--meta__divider--2MocR\",\"meta__category-link\":\"Meta-module--meta__category-link--1xgu8\"};","import React from 'react'\nimport { withPrefix, Link } from 'gatsby'\nimport Contacts from '../../Sidebar/Contacts'\nimport { useSiteMetadata } from '../../../hooks'\nimport type { NoProps } from '../../../types'\nimport styles from './Author.module.scss'\n\nconst Author: React.FC<NoProps> = () => {\n  const { author } = useSiteMetadata()\n\n  return (\n    <div className={styles['author']}>\n      <div className={styles['author__card']}>\n        <div className={styles['author__card-profile']}>\n          <Link className={styles['author__card-profile']} to=\"/pages/about\">\n            <img\n              src={withPrefix(author.photo)}\n              className={styles['author__card-profile-photo']}\n              width=\"50\"\n              height=\"50\"\n              alt={author.name}\n            />\n          </Link>\n          <div className={styles['author__card-profile-name']}>{author.name}</div>\n        </div>\n        <Contacts styles={{ marginBottom: 0 }} contacts={author.contacts} />\n      </div>\n    </div>\n  )\n}\n\nexport default Author\n","import React from 'react'\n\ninterface Props {\n  postTitle: string\n  postSlug: string\n}\n\nconst Comments: React.FC<Props> = () => {\n  return null\n}\n\nexport default Comments\n","import React from 'react'\nimport styles from './Content.module.scss'\n\ninterface Props {\n  body: string\n  title: string\n}\n\nconst Content: React.FC<Props> = ({ body, title }) => (\n  <div className={styles['content']}>\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n)\n\nexport default Content\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { getReadableDate } from '../../../utils'\nimport styles from './Meta.module.scss'\n\ninterface Props {\n  category: string\n  categorySlug: string\n  date: string\n}\n\nconst dateFormat: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'short', day: 'numeric' }\n\nconst Meta: React.FC<Props> = ({ category, categorySlug, date }) => (\n  <div className={styles['meta']}>\n    <p>\n      <span>Published {getReadableDate(date, dateFormat)}</span>\n      <span className={styles['meta__divider']} />\n      <span>in</span>\n      <span className={styles['meta__divider']} />\n      <span className={styles['meta__category']}>\n        <Link to={categorySlug} className={styles['meta__category-link']}>\n          {category}\n        </Link>\n      </span>\n    </p>\n  </div>\n)\n\nexport default Meta\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './Tags.module.scss'\n\ninterface Props {\n  tags: string[]\n  tagSlugs: string[]\n}\n\nconst Tags: React.FC<Props> = ({ tags, tagSlugs }) => (\n  <div className={styles['tags']}>\n    <ul className={styles['tags__list']}>\n      {tagSlugs &&\n        tagSlugs.map((slug, i) => (\n          <li className={styles['tags__list-item']} key={tags[i]}>\n            <Link to={slug} className={styles['tags__list-item-link']}>\n              {tags[i]}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  </div>\n)\n\nexport default Tags\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Author from './Author'\nimport Comments from './Comments'\nimport Content from './Content'\nimport Meta from './Meta'\nimport Tags from './Tags'\nimport type { MarkdownRemark } from '../../types'\nimport styles from './Post.module.scss'\n\ninterface Props {\n  post: MarkdownRemark\n}\n\nconst Post: React.FC<Props> = ({ post }) => {\n  const { html } = post\n  const { slug, categorySlug, tagSlugs } = post.fields\n  const { title, category, date, tags } = post.frontmatter\n\n  return (\n    <div className={styles['post']}>\n      <Link className={styles['post__home-button']} to=\"/\">\n        All Posts\n      </Link>\n\n      <div className={styles['post__content']}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles['post__footer']}>\n        <Meta category={category} categorySlug={categorySlug} date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n        <Author />\n      </div>\n\n      <div className={styles['post__comments']}>\n        <Comments postSlug={slug} postTitle={post.frontmatter.title} />\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Post from '../components/Post'\nimport { useSiteMetadata } from '../hooks'\nimport type { MarkdownRemark } from '../types'\n\ninterface Props {\n  data: {\n    markdownRemark: MarkdownRemark\n  }\n}\n\nconst PostTemplate: React.FC<Props> = ({ data }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata()\n  const { frontmatter } = data.markdownRemark\n  const { title: postTitle, description: postDescription = '', socialImage } = frontmatter\n  const metaDescription = postDescription || siteSubtitle\n  const socialImageUrl = socialImage?.publicURL\n\n  return (\n    <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription} socialImage={socialImageUrl}>\n      <Post post={data.markdownRemark} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        categorySlug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        category\n        socialImage {\n          publicURL\n        }\n      }\n    }\n  }\n`\n\nexport default PostTemplate\n"],"sourceRoot":""}